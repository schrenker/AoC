#+TITLE: Go Advent of Code ⭐⭐⭐⭐⭐ ⭐⭐⭐

Since I adopted an antipattern to throw bunch of functions into one single package, I decided to get rid of previous years, tools and other stuff and start fresh.

There are branches y2022 and y2015, but they will probably be replaced.
|----------+------+------+------+------+------+------+------+------+------|
| Day/Year | 2015 | 2016 | 2017 | 2018 | 2019 | 2020 | 2021 | 2022 | 2023 |
|----------+------+------+------+------+------+------+------+------+------|
|        1 |      |      |      |      |      |      |      |      |      |
|        2 |      |      |      |      |      |      |      |      |      |
|        3 |      |      |      |      |      |      |      |      |      |
|        4 |      |      |      |      |      |      |      |      |      |
|        5 |      |      |      |      |      |      |      |      |      |
|        6 |      |      |      |      |      |      |      |      |      |
|        7 |      |      |      |      |      |      |      |      |      |
|        8 |      |      |      |      |      |      |      |      |      |
|        9 |      |      |      |      |      |      |      |      |      |
|       10 |      |      |      |      |      |      |      |      |      |
|       11 |      |      |      |      |      |      |      |      |      |
|       12 |      |      |      |      |      |      |      |      |      |
|       13 |      |      |      |      |      |      |      |      |      |
|       14 |      |      |      |      |      |      |      |      |      |
|       15 |      |      |      |      |      |      |      |      |      |
|       16 |      |      |      |      |      |      |      |      |      |
|       17 |      |      |      |      |      |      |      |      |      |
|       18 |      |      |      |      |      |      |      |      |      |
|       19 |      |      |      |      |      |      |      |      |      |
|       20 |      |      |      |      |      |      |      |      |      |
|       21 |      |      |      |      |      |      |      |      |      |
|       22 |      |      |      |      |      |      |      |      |      |
|       23 |      |      |      |      |      |      |      |      |      |
|       24 |      |      |      |      |      |      |      |      |      |
|       25 |      |      |      |      |      |      |      |      |      |
|----------+------+------+------+------+------+------+------+------+------|

* Usage
go-task is used to generate all boilerplate data, and to run tasks. Any command below is to be prefixed with 'task '. All 'YEAR' parameters acces 4 digit year. DAY accepts 2 digit day. Part accepts one of: [1,01,2,02]
~gen -- YEAR DAY~          : Generates day file, along with it's test file and benchmark file.
~run -- YEAR DAY PART~     : Runs given challenge.
~new1~                     : Run latest generated day, part one.
~new2~                     : Run latest generated day, part two.
~bench -- YEAR DAY [PART]~ : Run benchmarks for a given day, with optional PART parameter.
~bnew1~                    : Run benchmarks for latest generated day, part one.
~bnew2~                    : Run benchmarks for latest generated day, part two.
~benchAll~                 : Run all benchmarks, for all days, for all years.
~test -- YEAR DAY~         : Run test for given day.
~tnew1~                    : Run tests for latest generated day, part one.
~tnew2~                    : Run tests for latest generated day, part two.
~testAll~                  : Run all tests, for all days, for all years.

* Requires Optimisation

* Ugly code

* Did not understand
